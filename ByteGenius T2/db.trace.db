2024-05-18 13:58:18.899579+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 14:00:03.845345+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 14:00:06.929582+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 14:03:12.485381+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 14:03:15.733744+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 14:09:28.505727+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 14:09:31.192949+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:18:49.944183+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:18:55.252709+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:20:39.442469+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:20:44.217404+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:24:42.022863+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:24:46.931087+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:27:13.956666+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:27:17.212039+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:33:45.343386+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:33:49.092330+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:37:15.354775+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:37:18.539469+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:50:07.769642+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:51:15.121270+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:53:16.100684+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 15:53:19.792123+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:15:13.424616+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:15:55.842325+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:17:45.774360+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:17:48.973397+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:20:02.074355+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:20:05.209575+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:20:05.992751+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:22:03.979277+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:22:07.269736+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:22:08.038566+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:22:08.645278+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:23:35.211655+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:23:39.023535+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:23:39.918667+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:23:40.608788+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:24:01.958654+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:24:05.381992+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:24:06.392752+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:24:07.001454+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:24:25.145156+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:24:28.546819+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:24:29.347646+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:24:30.047348+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:32:54.076053+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:32:57.295547+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:32:58.071552+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:32:58.733037+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:37:45.417586+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:37:48.648652+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:37:49.406387+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-18 16:37:50.031897+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 09:52:37.560136+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 10:43:21.646967+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 10:43:25.122351+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 10:43:25.900049+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 10:45:21.436562+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 10:45:24.583631+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 10:45:25.316599+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:14:21.781615+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:14:30.476360+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:14:33.324235+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:16:09.935576+02:00 database: wrong user or password; user: ""
org.h2.message.DbException: Nombre de usuario ó password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:343)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:121)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.getConnectionUrl(H2ConsoleAutoConfiguration.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:261)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:261)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:575)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:616)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:622)
	at java.base/java.util.stream.ReferencePipeline.toList(ReferencePipeline.java:627)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.logDataSources(H2ConsoleAutoConfiguration.java:86)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:69)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.withThreadContextClassLoader(H2ConsoleAutoConfiguration.java:78)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:201)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4880)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.descriptor.NestedClassTestDescriptor.instantiateTestClass(NestedClassTestDescriptor.java:85)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:287)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Nombre de usuario ó password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:522)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 183 more
2024-05-20 11:16:11.700429+02:00 database: wrong user or password; user: ""
org.h2.message.DbException: Nombre de usuario ó password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:343)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:121)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:168)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:87)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:80)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:143)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:132)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1234)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.descriptor.NestedClassTestDescriptor.instantiateTestClass(NestedClassTestDescriptor.java:85)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:287)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Nombre de usuario ó password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:522)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 145 more
2024-05-20 11:16:14.237635+02:00 database: wrong user or password; user: ""
org.h2.message.DbException: Nombre de usuario ó password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:343)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:121)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1234)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.descriptor.NestedClassTestDescriptor.instantiateTestClass(NestedClassTestDescriptor.java:85)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:287)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Nombre de usuario ó password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:522)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 148 more
2024-05-20 11:16:18.076164+02:00 database: wrong user or password; user: ""
org.h2.message.DbException: Nombre de usuario ó password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:343)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:121)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.getIsolatedConnection(GenerationTargetToDatabase.java:60)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.jdbcStatement(GenerationTargetToDatabase.java:112)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:79)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:228)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1234)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.descriptor.NestedClassTestDescriptor.instantiateTestClass(NestedClassTestDescriptor.java:85)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:287)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Nombre de usuario ó password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:522)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 155 more
2024-05-20 11:16:54.385076+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:16:57.910207+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:16:58.872577+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:17:51.456842+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:17:54.908118+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:17:55.676122+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:21:42.519533+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:23:16.677263+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:23:21.732485+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:23:23.186073+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:27:54.325641+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:27:57.688822+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:27:58.457596+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:33:55.944039+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:33:59.355221+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:34:00.068700+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:39:57.498624+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:40:00.788588+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:40:01.504726+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:49:32.104255+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:49:34.958122+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:49:35.644383+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:50:42.495296+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:50:45.859718+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:50:46.546952+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:54:04.147227+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:54:07.555315+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 11:54:08.287298+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:02:41.178244+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:02:44.589956+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:02:45.332198+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:04:13.042843+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:04:16.407541+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:04:17.193280+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:07:54.080332+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:07:57.417715+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:07:58.311957+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:14:25.960291+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:14:29.401654+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:14:30.118800+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:14:56.864988+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:15:00.606012+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:15:01.520161+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:15:50.822576+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:15:54.213438+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:15:55.142854+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:25:14.608029+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 12:30:43.658780+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 17:06:44.011007+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 17:10:15.321442+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
2024-05-20 17:23:27.249347+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "EVENTO" ya existe
Table "EVENTO" already exists; SQL statement:
create table evento (duracion_minutos integer, id_cliente bigint, id_entrenador bigint, id_evento bigint generated by default as identity, inicio timestamp(6), descripcion varchar(255), lugar varchar(255), nombre varchar(255) not null, observaciones varchar(255), regla_recurrencia varchar(255), tipo varchar(255) check (tipo in ('DISPONIBILIDAD','CITA')), primary key (id_evento)) [42101-224]
